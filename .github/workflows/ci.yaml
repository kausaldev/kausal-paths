name: CI
on: push
jobs:
  build_test_and_push:
    name: Build Docker images, run tests and push to Docker registry
    runs-on: self-hosted
    env:
      APP_IMAGE_NAME: paths
      DB_IMAGE_NAME: paths-postgres
      POSTGRES_PASSWORD: foobar123
      DATABASE_URL: postgres://paths:foobar123@db/paths
      EXTRA_PYPI_INDEX: ${{ secrets.EXTRA_PYPI_INDEX }}
      EXTRA_INSTALLED_APPS_VERSIONS: kausal-paths-extensions==0.3.4
      EXTRA_INSTALLED_APPS: kausal_paths_extensions
      DOCKER_BUILDKIT: 1
      BUILDKIT_PROGRESS: plain
      VAULT_PROJECT: paths-backend
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Check for deployment branch
        if: startsWith(github.ref, 'refs/heads/deployment/')
        run: |
          echo "DEPLOYMENT_TYPE=$(echo ${{ github.ref }} | cut -d / -f 4)" >> $GITHUB_ENV

      - name: Import Secrets
        id: secrets
        uses: hashicorp/vault-action@v2
        with:
          url: ${{ secrets.VAULT_URL }}
          token: ${{ secrets.VAULT_TOKEN }}
          secrets: |
              common-dev/data/github-actions/${{ env.VAULT_PROJECT }} * | DOCKER_ ;

      - name: Install Docker-compose
        run: |
          sudo apt-get update
          sudo apt-get -y install ca-certificates curl
          sudo install -m 0755 -d /etc/apt/keyrings
          sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc
          sudo chmod a+r /etc/apt/keyrings/docker.asc

          # Add the repository to Apt sources:
          echo \
            "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu \
            $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | \
            sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
          sudo apt-get update
          sudo apt-get -y install docker-compose-plugin

      # Clean up database volume left over from previous runs. If we don't do this, after a major version upgrade the db
      # container will refuse to start since it detects a existing incompatible database.
      - name: Remove existing containers and volumes
        run: docker compose down -v
      - name: Build Docker containers
        run: docker compose build
      - name: Start Postgres and Redis
        run: docker compose up -d db redis
      - name: Run pytest unit tests
        run: docker compose run --rm --entrypoint '' app pytest
      - name: Stop Postgres and Redis
        run: docker compose down
      - name: Log into Docker registry
        if: env.DEPLOYMENT_TYPE
        uses: docker/login-action@v2
        with:
          registry: ${{ steps.secrets.outputs.DOCKER_REPO }}
          username: ${{ steps.secrets.outputs.DOCKER_USERNAME }}
          password: ${{ steps.secrets.outputs.DOCKER_PASSWORD }}
      # - name: Push latest tag to Docker registry
      #   if: github.ref == 'refs/heads/main'
      #   run: |
      #     docker push ${{ env.APP_IMAGE }}:latest
      #     docker push ${{ env.DB_IMAGE }}:latest
      - name: Tag and push to registry
        if: env.DEPLOYMENT_TYPE
        env:
          APP_IMAGE: ${{ steps.secrets.outputs.DOCKER_REPO }}/${{ env.APP_IMAGE_NAME }}
          DB_IMAGE: ${{ steps.secrets.outputs.DOCKER_REPO }}/${{ env.DB_IMAGE_NAME }}
        run: |
          docker tag ${{ env.APP_IMAGE }} ${{ env.APP_IMAGE }}:${{ env.DEPLOYMENT_TYPE }}-${{ github.run_number }}
          docker tag ${{ env.APP_IMAGE }} ${{ env.APP_IMAGE }}:${{ env.DEPLOYMENT_TYPE }}-latest
          docker tag ${{ env.DB_IMAGE }} ${{ env.DB_IMAGE }}:${{ env.DEPLOYMENT_TYPE }}-${{ github.run_number }}
          docker tag ${{ env.DB_IMAGE }} ${{ env.DB_IMAGE }}:${{ env.DEPLOYMENT_TYPE }}-latest
          docker push ${{ env.APP_IMAGE }}:${{ env.DEPLOYMENT_TYPE }}-${{ github.run_number }}
          docker push ${{ env.APP_IMAGE }}:${{ env.DEPLOYMENT_TYPE }}-latest
          docker push ${{ env.DB_IMAGE }}:${{ env.DEPLOYMENT_TYPE }}-${{ github.run_number }}
          docker push ${{ env.DB_IMAGE }}:${{ env.DEPLOYMENT_TYPE }}-latest
